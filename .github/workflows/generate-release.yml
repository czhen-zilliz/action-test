# name: Manually Generate Release With Assets

# on:
#   workflow_dispatch:
#     inputs:
#       branchName:
#         description: 'Branch name'
#         required: true
#       releaseName:
#         description: 'Release name'
#         required: true
#       tagName:
#         description: 'Tag name'
#         required: true
#       prerelease:
#         description: 'Is prerelease?'
#         required: true
#         default: false

# name: release-please
# jobs:
#   release-please:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/setup-python@v2
#         with:
#           python-version: '3.8'
#           architecture: 'x64'
#       id: create-release
#         name: create release
#         run: |
#           curl \
#           -X POST \
#           -H "Accept: application/vnd.github.v3+json" \
#           https://api.github.com/repos/czhen-zilliz/action-test/releases \
#           -d '{"tag_name":"${{ github.event.inputs.tagName }}", \
#           "name": "${{ github.event.inputs.releaseName }}", \
#           "prerelease": ${{ github.event.inputs.releaseName }}
#           }' \
#           -u ".:${{secrets.GITHUB_TOKEN}}" \
#           | jq -r '.upload_url' \
#           > ./upload_url
#           export upload_url=`cat ./upload_url`
#           echo "::set-output name=upload_url::$upload_url"
#       id: upload-assets
#         name: upload assets
#         run: |
#           curl \
#           -X POST \
#           -H "Accept: application/vnd.github.v3+json" \
#           ${{ steps.create-release.outputs.upload_url }} \
#           -u ".:${{secrets.GITHUB_TOKEN}}" \

name: Main

# on:
#   push:
#     tags:
#       - "v*.*.*"

# on:
#   workflow_dispatch:
#     inputs:
#       releaseName:
#         description: 'Release name'
#         required: true
#       tagName:
#         description: 'Tag name'
#         required: true
#       prerelease:
#         description: 'Is prerelease?'
#         required: false
#         default: false
on:
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create files
        run: |
          sudo mkdir dist/
          sudo chmod -R 777 dist
          cd dist/
          sudo cp ../README.md ./README1.md
          sudo cp ../README.md ./README2.md
          cd ..
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/
      # - name: Pre Release
      #   uses: softprops/action-gh-release@v1
      #   if: contains(github.ref, 'pre')
      #   with:
      #     prerelease: ${{ github.event.inputs.prerelease }}
      #     tag_name: ${{ github.event.inputs.tagName }}
      #     name: ${{ github.event.inputs.releaseName }}
      #     files: |
      #       testFile1
      #       testFile2
      #       README.md

