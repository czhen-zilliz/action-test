name: Manually triggered workflow

on:
  workflow_dispatch:
    inputs:
      tagName:
        description: "Tag name"
        required: true
      repoName:
        description: "Repo name"
        required: true

jobs:
  update_branch:
    runs-on: ubuntu-latest
    steps:
      - id: fetch_tarball_url
        name: Fetch target release URL by tag
        run: |
          curl \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{secrets.FULL_REPO_ACCESS}}" \
            "https://api.github.com/repos/milvus-io/${{ github.event.inputs.repoName }}/releases/tags/${{ github.event.inputs.tagName }}" \
            | jq -r '.tarball_url' \
            > ./tarball_url
          export release_url=`cat ./tarball_url`
          echo "::set-output name=tarball_url::$release_url"
          echo "=>Completed: Fetching target release URL $release_url"
      - id: download_code
        name: Download and untar release code
        run: |
          wget --header="Authorization: token ${{secrets.FULL_REPO_ACCESS}}" "${{ steps.fetch_tarball_url.outputs.tarball_url }}" -O "${{ github.event.inputs.repoName }}.tar.gz"
          sudo mkdir "./${{ github.event.inputs.repoName }}"
          sudo tar -xzvf "${{ github.event.inputs.repoName }}.tar.gz" -C "${{ github.event.inputs.repoName }}" --strip-components 1
          echo "=>List all files"
          ls -l "./${{ github.event.inputs.repoName }}"
          echo "=>Completed: Download and untar."
      - run: |
        pwd
        ls
        sudo chown -R $USER:$USER ./
      - id: update_repo_directory
        name: Git clone and update API reference doc directory
        uses: actions/checkout@v2
        with:
          ref: "macos"
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - run: npm install
      - run: echo  $GITHUB_WORKSPACE
      - id: update_repo_pymilvus
        name: Update pymilvus doc repo
        if: ${{ github.event.inputs.repoName == 'pymilvus1' }}
        run: |
          sudo chmod -R 777 ../${{ github.event.inputs.repoName }}
          cd ${{ github.event.inputs.repoName }}
          sudo apt update
          sudo apt install python3
          sudo apt install python3-pip
          python3 --version
          pip3 --version
          # tmporarily fix pprint issue
          # pip3 install pprint -i https://pypi.doubanio.com/simple/ --trusted-host pypi.douban.com
          pip3 install -r requirements.txt
          pip3 install docutils==0.16
          cd docs
          # tmporarily fix PBR_VERSION issue
          export PBR_VERSION=5.6.0
          sudo apt install make
          make html
          cd build/html
          sudo mv ../../../../${{ github.event.repository.name }}/pymilvus-fs.md ./pymilvus-fs.js
          curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
          sudo apt -y install nodejs
          node  -v
          sudo npm i
          sudo node ./pymilvus-fs.js
          cd ../../../../${{ github.event.repository.name }}/APIReference/pymilvus
          echo "Upcomming tag name: ${{ github.event.inputs.tagName }}"
          echo "=>List all doc versions"
          ls -l
          sudo chmod -R 777 .
          if [ -d "./${{ github.event.inputs.tagName }}" ]
          then
            echo "===tag name exists, remove all under this dir==="
            sudo rm -fr "./${{ github.event.inputs.tagName }}"
            git add .
            git status
            git commit -m "clean files under ${{ github.event.inputs.repoName }} ${{ github.event.inputs.tagName }}"
            sudo mkdir "./${{ github.event.inputs.tagName }}"
          else
            echo "===miss tag name, create this dir==="
            sudo mkdir "./${{ github.event.inputs.tagName }}"
          fi
          sudo rm -fr ../../../pymilvus/docs/build/html/api/api.html
          cd ../../
          mv ./api_reference_fs.md ./api_reference_fs.js
          node api_reference_fs.js ${{ github.event.inputs.repoName }} ${{ github.event.inputs.tagName }} ../pymilvus/docs/build/html/output
          sudo chmod -R 777 .
          git add .
          git commit -m "Update pymilvus"
          git push -f origin macos
          echo "=>Completed: Update pymilvus doc repo."
